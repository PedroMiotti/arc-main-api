CREATE TABLE "User" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Name" VARCHAR(200) NOT NULL,
  "Document" VARCHAR(200),
  "DocumentType" VARCHAR(200),
  "Phone" VARCHAR(200),
  "Email" VARCHAR(200) NOT NULL,
  "Password" VARCHAR(200) NOT NULL,
  "IsActive" BOOL,
  "IsMaster" BOOL DEFAULT false,
  "ParentId" INT,
  "RoleId" INT,
  "InvitationStatusId" INT,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "InvitationStatus" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "RolePermission" (
  "PermissionId" INT NOT NULL,
  "RoleId" INT NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP,
  PRIMARY KEY ("PermissionId", "RoleId")
);

CREATE TABLE "Role" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Name" VARCHAR(200) NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Permission" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Action" VARCHAR(200) NOT NULL,
  "Key" VARCHAR(200) NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Session" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Token" VARCHAR(200) NOT NULL,
  "UserId" INT NOT NULL,
  "ClientId" INT NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "UserFavoriteProject" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "UserId" INT NOT NULL,
  "ProjectId" INT NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Project" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Name" VARCHAR(200) NOT NULL,
  "Tag" VARCHAR(200),
  "ActivePhaseId" INT,
  "CategoryId" INT,
  "OwnerId" INT NOT NULL,
  "LeaderId" INT NOT NULL,
  "CreatedBy" INT NOT NULL,
  "StartAt" TIMESTAMP NOT NULL,
  "EndAt" TIMESTAMP,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "ProjectCategory" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "BoardColumns" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "ProjectId" INT NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "BoardStatus" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "ProjectId" INT NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "BoardStatusTypeId" INT NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "BoardStatusType" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Phase" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "Color" VARCHAR(200) NOT NULL,
  "ProjectId" INT NOT NULL,
  "CreatedBy" INT NOT NULL,
  "StartAt" VARCHAR(200) NOT NULL,
  "EndAt" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Task" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Name" VARCHAR(200) NOT NULL,
  "Description" VARCHAR(200),
  "EstimatedTime" INT,
  "PhaseId" INT NOT NULL,
  "StatusId" INT NOT NULL,
  "AssignTo" INT,
  "CreatedBy" INT NOT NULL,
  "StartAt" VARCHAR(200) NOT NULL,
  "EndAt" VARCHAR(200) NOT NULL,
  "IsOnBoard" BOOL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Event" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Name" VARCHAR(200) NOT NULL,
  "Description" VARCHAR(200),
  "EventTypeId" INT NOT NULL,
  "HostId" INT NOT NULL,
  "Location" VARCHAR(200),
  "MeetingLink" VARCHAR(200),
  "StartAt" VARCHAR(200) NOT NULL,
  "EndAt" VARCHAR(200),
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "EventType" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "ScheduleEvent" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "UserId" INT,
  "EventId" INT,
  "ScheduleEventStatusId" INT,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "ScheduleEventStatus" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "File" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Name" VARCHAR(200) NOT NULL,
  "MimeType" VARCHAR(200),
  "Extension" VARCHAR(200) NOT NULL,
  "Size" BIGINT,
  "IsVisibleToClient" BOOL DEFAULT false,
  "StorageFileId" INT,
  "UploadedBy" INT NOT NULL,
  "FolderId" INT,
  "ProjectId" INT,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Folder" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Name" VARCHAR(200) NOT NULL,
  "ParentId" INT,
  "ProjectId" INT,
  "CreatedBy" INT NOT NULL,
  "IsVisibleToClient" BOOL DEFAULT false,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "FilePermissions" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "FileId" INT,
  "UserId" INT,
  "AccessLevelId" INT
);

CREATE TABLE "FolderPermission" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "FolderId" INT,
  "UserId" INT,
  "AccessLevelId" INT
);

CREATE TABLE "AccessLevel" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Description" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "StorageFile" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Url" VARCHAR(200) NOT NULL,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

CREATE TABLE "Note" (
  "Id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "Title" VARCHAR(200) NOT NULL,
  "Content" TEXT,
  "CreatedBy" INT NOT NULL,
  "UpdatedBy" INT,
  "CreatedAt" TIMESTAMP DEFAULT (now()),
  "UpdatedAt" TIMESTAMP DEFAULT (now()),
  "DeletedAt" TIMESTAMP
);

COMMENT ON COLUMN "BoardStatusType"."Description" IS 'Done, In Progress, Pending, Cancelled';

COMMENT ON COLUMN "Task"."IsOnBoard" IS 'If task has not been completed, but there is another active phase, it should keep on board';

COMMENT ON COLUMN "ScheduleEventStatus"."Description" IS 'Pending, Accepted, Rejected';

COMMENT ON COLUMN "AccessLevel"."Description" IS 'Read, Write, Delete';

ALTER TABLE "User" ADD FOREIGN KEY ("ParentId") REFERENCES "User" ("Id");

ALTER TABLE "User" ADD FOREIGN KEY ("RoleId") REFERENCES "Role" ("Id");

ALTER TABLE "User" ADD FOREIGN KEY ("InvitationStatusId") REFERENCES "InvitationStatus" ("Id");

ALTER TABLE "RolePermission" ADD FOREIGN KEY ("PermissionId") REFERENCES "Permission" ("Id");

ALTER TABLE "RolePermission" ADD FOREIGN KEY ("RoleId") REFERENCES "Role" ("Id");

ALTER TABLE "Session" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "UserFavoriteProject" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "UserFavoriteProject" ADD FOREIGN KEY ("ProjectId") REFERENCES "Project" ("Id");

ALTER TABLE "Project" ADD FOREIGN KEY ("ActivePhaseId") REFERENCES "Phase" ("Id");

ALTER TABLE "Project" ADD FOREIGN KEY ("CategoryId") REFERENCES "ProjectCategory" ("Id");

ALTER TABLE "Project" ADD FOREIGN KEY ("OwnerId") REFERENCES "User" ("Id");

ALTER TABLE "Project" ADD FOREIGN KEY ("LeaderId") REFERENCES "User" ("Id");

ALTER TABLE "Project" ADD FOREIGN KEY ("CreatedBy") REFERENCES "User" ("Id");

ALTER TABLE "BoardColumns" ADD FOREIGN KEY ("ProjectId") REFERENCES "Project" ("Id");

ALTER TABLE "BoardStatus" ADD FOREIGN KEY ("ProjectId") REFERENCES "Project" ("Id");

ALTER TABLE "BoardStatus" ADD FOREIGN KEY ("BoardStatusTypeId") REFERENCES "BoardStatusType" ("Id");

ALTER TABLE "Phase" ADD FOREIGN KEY ("ProjectId") REFERENCES "Project" ("Id");

ALTER TABLE "Phase" ADD FOREIGN KEY ("CreatedBy") REFERENCES "User" ("Id");

ALTER TABLE "Task" ADD FOREIGN KEY ("PhaseId") REFERENCES "Phase" ("Id");

ALTER TABLE "Task" ADD FOREIGN KEY ("StatusId") REFERENCES "BoardStatus" ("Id");

ALTER TABLE "Task" ADD FOREIGN KEY ("AssignTo") REFERENCES "User" ("Id");

ALTER TABLE "Task" ADD FOREIGN KEY ("CreatedBy") REFERENCES "User" ("Id");

ALTER TABLE "Event" ADD FOREIGN KEY ("EventTypeId") REFERENCES "EventType" ("Id");

ALTER TABLE "Event" ADD FOREIGN KEY ("HostId") REFERENCES "User" ("Id");

ALTER TABLE "ScheduleEvent" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "ScheduleEvent" ADD FOREIGN KEY ("EventId") REFERENCES "Event" ("Id");

ALTER TABLE "ScheduleEvent" ADD FOREIGN KEY ("ScheduleEventStatusId") REFERENCES "ScheduleEventStatus" ("Id");

ALTER TABLE "File" ADD FOREIGN KEY ("StorageFileId") REFERENCES "StorageFile" ("Id");

ALTER TABLE "File" ADD FOREIGN KEY ("UploadedBy") REFERENCES "User" ("Id");

ALTER TABLE "File" ADD FOREIGN KEY ("FolderId") REFERENCES "Folder" ("Id");

ALTER TABLE "File" ADD FOREIGN KEY ("ProjectId") REFERENCES "Project" ("Id");

ALTER TABLE "Folder" ADD FOREIGN KEY ("ParentId") REFERENCES "Folder" ("Id");

ALTER TABLE "Folder" ADD FOREIGN KEY ("ProjectId") REFERENCES "Project" ("Id");

ALTER TABLE "Folder" ADD FOREIGN KEY ("CreatedBy") REFERENCES "User" ("Id");

ALTER TABLE "FilePermissions" ADD FOREIGN KEY ("FileId") REFERENCES "File" ("Id");

ALTER TABLE "FilePermissions" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "FilePermissions" ADD FOREIGN KEY ("AccessLevelId") REFERENCES "AccessLevel" ("Id");

ALTER TABLE "FolderPermission" ADD FOREIGN KEY ("FolderId") REFERENCES "Folder" ("Id");

ALTER TABLE "FolderPermission" ADD FOREIGN KEY ("UserId") REFERENCES "User" ("Id");

ALTER TABLE "FolderPermission" ADD FOREIGN KEY ("AccessLevelId") REFERENCES "AccessLevel" ("Id");

ALTER TABLE "Note" ADD FOREIGN KEY ("CreatedBy") REFERENCES "User" ("Id");

ALTER TABLE "Note" ADD FOREIGN KEY ("UpdatedBy") REFERENCES "User" ("Id");
